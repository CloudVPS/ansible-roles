---

- name: NRPE | Ubuntu | copy deb file with enable-command-args
  copy:
    dest=/root/nagios-nrpe-server_2.15-1ubuntu1_amd64.deb
    src=nagios-nrpe-server_2.15-1ubuntu1_amd64.deb
  when: ansible_distribution == "Ubuntu"
  tags:
    - nrpe
    - nrpe-config

- name: NRPE | Ubuntu | install nrpe from .deb
  apt:
    deb=/root/nagios-nrpe-server_2.15-1ubuntu1_amd64.deb
    force=yes
  when: ansible_distribution == "Ubuntu"
  register: apt_res
  retries: 5
  until: apt_res is success
  tags:
    - repository
    - nrpe

## Put nagios Package on hold
- name: hold nagios-nrpe-server package
  dpkg_selections:
    name: nagios-nrpe-server
    selection: hold
  when: ansible_distribution == "Ubuntu"


- name: NRPE | Ubuntu | ensure repostory packges are installed
  package:
    name={{ item }}
    state=present
  with_items:
    - python-apt
    - libfile-readbackwards-perl
    - bc
    - python-pycurl
  when: ansible_distribution == "Ubuntu"
  tags:
    - repository
    - nrpe

- name: NRPE | Ubuntu | install the nagios-nrpe-plugin package without recommends
  apt: 
    name={{ item }}
    install_recommends=no
    state=present
  with_items:
    - monitoring-plugins-basic
    - nagios-nrpe-plugin
    - monitoring-plugins-common
  when: ansible_distribution == "Ubuntu"
  register: apt_res
  retries: 5
  until: apt_res is success
  tags:
    - nrpe

- name: NRPE | CentOS | ensure repostory packges are installed
  package:
    name={{ item }}
    state=present
  with_items:
    - bc
    - python-pycurl
    - nagios-plugins-nrpe
    - nrpe
    - nagios-plugins-disk
    - nagios-plugins-check-updates
    - nagios-plugins-fping
    - nagios-plugins-http
    - nagios-plugins-load
    - nagios-plugins-mailq
    - nagios-plugins-pgsql
    - nagios-plugins-smtp
    - nagios-plugins-swap
    - nagios-plugins-procs
  when: ansible_distribution == "CentOS"
  tags:
    - repository
    - nrpe

- name: NRPE | create symlink on CentOS to usr/lib/nagios
  file:
    dest=/usr/lib/nagios
    src=/usr/lib64/nagios
    state=link
  when: ansible_distribution == "CentOS"
  tags:
    - nrpe
    - nrpe-config
    - nrpe-symlink

- name: NRPE | copy generic nagios check scripts
  copy: 
    dest=/usr/lib/nagios/plugins/
    src={{ item }}
    mode=755
    backup=yes
  with_fileglob:
    - scripts/*
  notify:
    - restart nrpe redhat
    - restart nrpe debian
  tags:
    - nrpe
    - nrpe-config


- name: NRPE | create symlink on CentOS to nrpe.d
  file:
    dest=/etc/nagios/nrpe.d
    src=/etc/nrpe.d
    state=link
  when: ansible_distribution == "CentOS"
  tags:
    - nrpe
    - nrpe-config
    - nrpe-symlink


# Generic NRPE configuration
- name: NRPE | copy generic nrpe check commands
  copy:
    dest=/etc/nagios/nrpe.d/
    src={{ item }}
    backup=yes
  with_fileglob:
    - commands/*
  notify:
    - restart nrpe redhat
    - restart nrpe debian
  tags:
    - nrpe
    - nrpe-config

- name: NRPE | set allow template
  template:
    src=xls_allow_xls.cfg.j2
    dest=/etc/nagios/nrpe.d/xls_allow_xls.cfg
    backup=yes
  notify:
    - restart nrpe debian
  when: ansible_distribution == "Ubuntu" and nrpe.allowed_hosts is defined or nrpe_allowed_hosts_list is defined
  tags:
    - nrpe
    - nrpe-config

#xls_allow_xls.cfg is ignored on CentOS
- name: NRPE | set allow item
  lineinfile:
    dest: /etc/nagios/nrpe.cfg
    state: present
    regexp: allowed_hosts=.*
    line: allowed_hosts={{nrpe_allowed_hosts_list}}
  notify:
    - restart nrpe redhat
  when: ansible_distribution == "CentOS" and nrpe_allowed_hosts_list is defined
  tags:
    - nrpe
    - nrpe-config
    - nrpe-debug


## Disable some default options
- name: NRPE | remove all item= default options
  lineinfile:
    dest: /etc/nagios/nrpe.cfg
    state: absent
    regexp: "^{{ item }}"
  notify:
    - restart nrpe debian
    - restart nrpe redhat
  with_items:
    - allow_bash_command_substitution=.*
    - dont_blame_nrpe=.*
    - command\[.*\]=.*
  tags:
    - nrpe
    - nrpe-config
    - nrpe-debug

## Make sure NRPE is running
- name: NRPE | Debian | make sure nagios-nrpe-server is running
  service:
    name=nagios-nrpe-server
    enabled=yes
    state=started
  when: ansible_distribution == "Ubuntu"
  tags: nrpe

- name: NRPE | RedHat | make sure nagios-nrpe-server is running
  service:
    name=nrpe
    enabled=yes
    state=started
  when: ansible_distribution == "CentOS"
  tags: nrpe


## Custom Checks
- name: NRPE | Ubuntu | copy sql check
  copy: 
    dest=/usr/lib/nagios/plugins/check_mysql
    src={{ item }}
  with_fileglob:
    - check_mysql
  when: ansible_distribution == "Ubuntu"
  notify:
    - restart nrpe debian
  tags:
    - nrpe
    - nrpe-config

- name: NRPE | set check_mysql_nopass template
  template:
    src=xls_check_mysql_nopass.cfg.j2
    dest=/etc/nagios/nrpe.d/xls_check_mysql_nopass.cfg
    backup=yes
  notify:
    - restart nrpe redhat
    - restart nrpe debian
  when: mysql_check_user is defined
  tags:
    - nrpe
    - nrpe-config


#SUDOERS
- name: Copy sudoers file for safety
  command: cp -f /etc/sudoers /etc/sudoers.tmp
  tags:
    - nrpe
    - sudo

- name: Create sudoers file backup
  command: cp -f /etc/sudoers /etc/sudoers.${date}.bak
  tags:
    - nrpe
    - sudo

- name: Add nagios to sudoers
  lineinfile: 
    dest: /etc/sudoers.tmp 
    state: present 
    regexp: "{{ item.regexp}}"
    line: "{{ item.line }}"
  when: ansible_distribution == "Ubuntu" 
  with_items:
    - { regexp: "^nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_mysql$", line: "nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_mysql" }
    - { regexp: "^nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/haproxy.pl$", line: "nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/haproxy.pl" }
    - { regexp: "^nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_disk$", line: "nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_disk" }
    - { regexp: "^nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_pacemaker.sh$", line: "nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_pacemaker.sh" }
    - { regexp: "^nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_time_log.pl$", line: "nagios ALL = NOPASSWD: /usr/lib/nagios/plugins/check_time_log.pl" }
  tags:
    - nrpe
    - sudo

- name: Final sudoers file check
  shell: visudo -q -c -f /etc/sudoers.tmp && cp -f /etc/sudoers.tmp /etc/sudoers
  tags:
    - nrpe
    - sudo

